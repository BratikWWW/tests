{"version":3,"file":"scripts.7f1077d105da0cc4e38f.js","mappings":"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","sources":["webpack://tests/./src/js/data.js","webpack://tests/./src/js/modules/clear-content.js","webpack://tests/./src/js/modules/element-visibility.js","webpack://tests/./src/js/modules/modal.js","webpack://tests/./src/js/modules/remove-active.js","webpack://tests/./src/js/modules/create-element.js","webpack://tests/./src/index.js","webpack://tests/./src/js/modules/generate-test.js","webpack://tests/./src/js/modules/generate-finished-test.js","webpack://tests/./src/js/modules/reset-test.js"],"sourcesContent":["export const testData = [\r\n    {\r\n        name: \"Математика\",\r\n        descr: \"Тест по математике\",\r\n        questions: [\r\n            {\r\n                question: \"2+2=\",\r\n                answers: [\"3\", \"4\", \"2\", \"1\"],\r\n                correct: \"4\",\r\n            },\r\n            {\r\n                question: \"2+1=\",\r\n                answers: [\"3\", \"4\", \"7\", \"2\"],\r\n                correct: \"3\",\r\n            },\r\n            {\r\n                question: \"6+3=\",\r\n                answers: [\"7\", \"2\", \"9\", \"1\"],\r\n                correct: \"9\",\r\n            },\r\n            {\r\n                question: \"8+0=\",\r\n                answers: [\"4\", \"3\", \"1\", \"8\"],\r\n                correct: \"8\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: \"Информатика\",\r\n        descr: \"Тест по информатике\",\r\n        questions: [\r\n            {\r\n                question:\r\n                    \"Какое значение следует задать атрибуту type, чтобы оно превращало входной тэг в форму отправки?\",\r\n                answers: [\"Submit\", \"Checkbox\", \"Radiobutton\"],\r\n                correct: \"Submit\",\r\n            },\r\n            {\r\n                question: \"Какие тэги делают шрифт текста жирным?\",\r\n                answers: [\"ins и del\", \"li и ul\", \"b и strong\"],\r\n                correct: \"b и strong\",\r\n            },\r\n            {\r\n                question: \"Какие тэги используются для определения заголовков?\",\r\n                answers: [\"h1-h6\", \"Header\", \"Heading\"],\r\n                correct: \"h1-h6\",\r\n            },\r\n            {\r\n                question: \"HTML – это\",\r\n                answers: [\"Язык разметки\", \"Библиотека гипертекста\", \"Скриптовый язык\"],\r\n                correct: \"Язык разметки\",\r\n            },\r\n        ],\r\n    },\r\n];","export function clearContent(element) {\r\n    while (element.firstChild) {\r\n        element.removeChild(element.firstChild);\r\n    }\r\n}","export function hideElements (...elements) {\r\n    for (let elem of elements) {\r\n        elem.classList.add(\"hidden\")\r\n    }\r\n}\r\n\r\nexport function showElements (...elements) {\r\n    for (let elem of elements) {\r\n        elem.classList.remove(\"hidden\")\r\n    }\r\n}","export function openModal(modal) {\r\n    modal.style.display = \"block\";\r\n    \r\n}\r\n\r\nexport function closeModal(modal) {\r\n    modal.style.display = \"none\";\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","function removeActive(elem) {\r\n    const items = elem;\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n        if (items[i].tagName == \"LI\") {\r\n            items[i].classList.remove(\"active\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default removeActive","function createElem(elem, className, content = '') {\r\n    let item = document.createElement(elem)\r\n    item.classList.add(className)\r\n    item.innerHTML = content\r\n\r\n    return item\r\n}\r\n\r\nexport default createElem","import \"./styles/index.scss\";\r\nimport { testData } from \"./js/data\";\r\nimport { clearContent } from \"./js/modules/clear-content\";\r\nimport { showElements, hideElements } from \"./js/modules/element-visibility\";\r\nimport {openModal, closeModal} from \"./js/modules/modal\";\r\nimport removeActive from \"./js/modules/remove-active\"\r\nimport generateTest from \"./js/modules/generate-test\";\r\nimport generateFinishedTest from './js/modules/generate-finished-test'\r\nimport resetTest from \"./js/modules/reset-test\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const testListBlock = document.querySelector(\".sidebar__test-list\");\r\n\r\n    const descrTest = document.querySelector(\".contents__body__descr-test\");\r\n    const descr = document.querySelector(\".contents__descr\");\r\n    const startBtn = document.querySelector(\".contents__body__start-btn\");\r\n    const cancelBtn = document.querySelector(\".contents__body__cancel-btn\");\r\n\r\n    const contentsHeader = document.querySelector(\".contents__header\");\r\n    const contentsHeaderTitle = document.querySelector(\".contents__header__title\");\r\n    const contentsHeaderStartTest = document.querySelector(\".contents__header__start-test\");\r\n    const nameTest = document.querySelector(\".contents__header__start-test__title \");\r\n\r\n    const notice = document.querySelector(\".contents__notice\");\r\n\r\n    const contentTest = document.querySelector(\".contents__body__question-list\");\r\n    const footerButton = document.querySelector(\".contents__body__footer__btn\");\r\n\r\n    const completedTestBodyAnswersList = document.querySelector(\".contents__body_completed-test__answers-list\");\r\n    const completedTestBody = document.querySelector(\".contents__body_completed-test\");\r\n    const rightAnswers = document.querySelector(\".contents__body_completed-test__right-answers\");\r\n\r\n    const resetButton = document.querySelector(\".contents__header__start-test__btn-reset\");\r\n\r\n    const modal = document.getElementById(\"myModal\");\r\n    const modalExitButton = document.querySelector(\".modal-buttons__exit\");\r\n    const modalCancelButton = document.querySelector(\".modal-buttons__cancel\");\r\n    const exitTestButton = document.querySelector('.contents__header__start-test__btn-exit')\r\n\r\n    \r\n    let currentTest = \"\";\r\n    let testState = null\r\n\r\n    testListBlock.onclick = function (event) {\r\n        let target = event.target;\r\n        if (target.tagName != \"LI\") return;\r\n\r\n        if(testState != null){\r\n            openModal(modal)\r\n        }else {\r\n            removeActive(testListBlock.childNodes);\r\n            target.classList.add(\"active\");\r\n            currentTest = target.innerHTML;\r\n            \r\n            showElements(contentsHeader, descrTest)\r\n            hideElements(notice)\r\n    \r\n            testData.forEach((test) => {\r\n                if (test.name == target.innerHTML) {\r\n                    descr.innerHTML = test.descr;\r\n                }\r\n            });    \r\n        }\r\n\r\n    };\r\n\r\n    cancelBtn.addEventListener(\"click\", () => {\r\n        showElements(notice)\r\n        hideElements(contentsHeader, descrTest)\r\n        removeActive(testListBlock.childNodes);\r\n    });\r\n\r\n\r\n    let currentQuestions = null;\r\n    let options = null;\r\n    \r\n    function startTest() {\r\n        testState = true\r\n        nameTest.innerHTML = currentTest;\r\n\r\n        clearContent(contentTest);\r\n        showElements(contentsHeaderStartTest, footerButton)\r\n        hideElements(contentsHeaderTitle, descrTest)\r\n        \r\n        for (let key in testData) {\r\n            if (testData[key].name == currentTest)\r\n                currentQuestions = testData[key].questions;\r\n        }\r\n\r\n        generateTest(currentQuestions, contentTest)\r\n\r\n        options = document.querySelectorAll(\".contents__body__question-list__item__options__input\");\r\n    }\r\n\r\n    startBtn.addEventListener(\"click\", startTest);\r\n\r\n    footerButton.addEventListener(\"click\", (e) => {\r\n        testState = true\r\n        if (footerButton.innerHTML == \"Завершить\") {\r\n            contentsHeaderStartTest.classList.add(\"hidden\");\r\n            clearContent(contentTest);\r\n            completedTestBody.classList.remove(\"hidden\");\r\n\r\n            let ourAnswers = [];\r\n\r\n            options.forEach((option) => {\r\n                if (option.checked) {\r\n                    ourAnswers.push(option.value);\r\n                }\r\n            });\r\n\r\n            let countRightAnswers = generateFinishedTest(currentQuestions, ourAnswers, completedTestBodyAnswersList);\r\n            rightAnswers.innerHTML = `Вы ответили на ${countRightAnswers} из ${currentQuestions.length} вопросов.`;\r\n            footerButton.innerHTML = \"Пройти ещё раз\";\r\n\r\n        } else {\r\n            completedTestBody.classList.add(\"hidden\");\r\n            footerButton.innerHTML = \"Завершить\";\r\n            clearContent(completedTestBodyAnswersList.lastChild);\r\n            startTest();\r\n        }\r\n    });\r\n\r\n    resetButton.addEventListener(\"click\", () => resetTest(options));\r\n    \r\n    exitTestButton.onclick = () => {\r\n        openModal(modal)\r\n    }\r\n\r\n    modalExitButton.onclick = () => {\r\n        closeModal(modal)\r\n        document.location.reload()\r\n    }\r\n\r\n    modalCancelButton.onclick = () => {\r\n        closeModal(modal)\r\n    }\r\n});\r\n","import createElem from \"./create-element\";\r\n\r\nfunction generateTest (questions, block) {\r\n    let id = 0;\r\n    let numberAnwser = 0;\r\n\r\n    questions.forEach((question) => {\r\n        const testItemTitle = createElem(\"h3\", \"contents__body__question-list__item__title\", question.question);\r\n        const testItem = createElem(\"li\", \"contents__body__question-list__item\", );\r\n        const optionsBlock = createElem(\"div\", \"contents__body__question-list__item__options\");\r\n        \r\n        block.append(testItem);\r\n        testItem.append(testItemTitle);\r\n\r\n        question.answers.forEach((answer) => {\r\n            const label = createElem(\"label\", \"contents__body__question-list__item__options__label\", answer);\r\n            label.setAttribute(\"for\", `answer${id}`);\r\n\r\n            const radio = createElem(\"input\", \"contents__body__question-list__item__options__input\");\r\n            radio.id = `answer${id}`;\r\n            radio.name = `answer${numberAnwser}`;\r\n            radio.type = \"radio\";\r\n            radio.value = answer;\r\n            \r\n            optionsBlock.append(radio);\r\n            optionsBlock.append(label);\r\n            id ++;\r\n        });\r\n        testItem.append(optionsBlock);\r\n        numberAnwser ++;\r\n    });\r\n}\r\n\r\nexport default generateTest","import createElem from \"./create-element\";\r\n\r\nfunction generateFinishedTest (currentQuestions, ourAnswers, block) {\r\n    let countRightAnswers = 0;\r\n    \r\n    const ul = createElem(\r\n        \"ul\",\r\n        \"contents__body_completed-test__list\"\r\n    );\r\n\r\n    for (let i = 0; i < currentQuestions.length; i++) {\r\n        if (ourAnswers[i] == currentQuestions[i].correct) {\r\n            countRightAnswers++;\r\n        }\r\n        \r\n\r\n        const li = createElem(\r\n            \"li\",\r\n            \"contents__body_completed-test__list__item\"\r\n        );\r\n\r\n        const question = createElem(\r\n            \"h3\",\r\n            \"contents__body_completed-test__list__item__question\",\r\n            currentQuestions[i].question\r\n        );\r\n        const ourAnswer = createElem(\r\n            \"span\",\r\n            \"contents__body_completed-test__list__item__our-answer\",\r\n            `Вы ответили: ${ourAnswers[i] === undefined ? \"Не ответили\" : ourAnswers[i]\r\n            }`\r\n        );\r\n        const rightAnswer = createElem(\r\n            \"span\",\r\n            \"contents__body_completed-test__list__item__right\",\r\n            `Правильный ответ: ${currentQuestions[i].correct}`\r\n        );\r\n\r\n        ul.append(li);\r\n        li.append(question);\r\n        li.append(rightAnswer);\r\n        li.append(ourAnswer);\r\n    }\r\n    block.append(ul);\r\n\r\n\r\n    return countRightAnswers\r\n}\r\n\r\nexport default generateFinishedTest","function resetTest (options) {\r\n    options.forEach((option) => {\r\n        option.checked = false;\r\n    });\r\n}\r\n\r\nexport default resetTest\r\n"],"names":["testData","name","descr","questions","question","answers","correct","clearContent","element","firstChild","removeChild","hideElements","elements","elem","classList","add","showElements","remove","openModal","modal","style","display","closeModal","items","i","length","tagName","className","content","item","document","createElement","innerHTML","addEventListener","testListBlock","querySelector","descrTest","startBtn","cancelBtn","contentsHeader","contentsHeaderTitle","contentsHeaderStartTest","nameTest","notice","contentTest","footerButton","completedTestBodyAnswersList","completedTestBody","rightAnswers","resetButton","getElementById","modalExitButton","modalCancelButton","exitTestButton","currentTest","testState","onclick","event","target","removeActive","childNodes","forEach","test","currentQuestions","options","startTest","key","block","id","numberAnwser","testItemTitle","createElem","testItem","optionsBlock","append","answer","label","setAttribute","radio","type","value","querySelectorAll","e","ourAnswers","option","checked","push","countRightAnswers","ul","li","ourAnswer","undefined","rightAnswer","generateFinishedTest","lastChild","resetTest","location","reload"],"sourceRoot":""}