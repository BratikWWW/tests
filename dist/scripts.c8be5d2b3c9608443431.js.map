{"version":3,"file":"scripts.c8be5d2b3c9608443431.js","mappings":"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","sources":["webpack://tests/./src/js/data.js","webpack://tests/./src/js/clear-content.js","webpack://tests/./src/index.js"],"sourcesContent":["export const testData = [\r\n    {\r\n        name: \"Математика\",\r\n        descr: \"Тест по математике\",\r\n        questions: [\r\n            {\r\n                question: \"2+2=\",\r\n                answers: [\"3\", \"4\", \"2\", \"1\"],\r\n                correct: \"4\",\r\n            },\r\n            {\r\n                question: \"2+1=\",\r\n                answers: [\"3\", \"4\", \"7\", \"2\"],\r\n                correct: \"3\",\r\n            },\r\n            {\r\n                question: \"6+3=\",\r\n                answers: [\"7\", \"2\", \"9\", \"1\"],\r\n                correct: \"9\",\r\n            },\r\n            {\r\n                question: \"8+0=\",\r\n                answers: [\"4\", \"3\", \"1\", \"8\"],\r\n                correct: \"8\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: \"Информатика\",\r\n        descr: \"Тест по информатике\",\r\n        questions: [\r\n            {\r\n                question:\r\n                    \"Какое значение следует задать атрибуту type, чтобы оно превращало входной тэг в форму отправки?\",\r\n                answers: [\"Submit\", \"Checkbox\", \"Radiobutton\"],\r\n                correct: \"Submit\",\r\n            },\r\n            {\r\n                question: \"Какие тэги делают шрифт текста жирным?\",\r\n                answers: [\"ins и del\", \"li и ul\", \"b и strong\"],\r\n                correct: \"b и strong\",\r\n            },\r\n            {\r\n                question: \"Какие тэги используются для определения заголовков?\",\r\n                answers: [\"h1-h6\", \"Header\", \"Heading\"],\r\n                correct: \"h1-h6\",\r\n            },\r\n            {\r\n                question: \"HTML – это\",\r\n                answers: [\"Язык разметки\", \"Библиотека гипертекста\", \"Скриптовый язык\"],\r\n                correct: \"Язык разметки\",\r\n            },\r\n        ],\r\n    },\r\n];","export function clearContent(element) {\r\n    while (element.firstChild) {\r\n        element.removeChild(element.firstChild);\r\n    }\r\n}","import \"./styles/index.scss\";\r\nimport { testData } from './js/data'\r\nimport {clearContent} from './js/clear-content'\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const sideBar = document.querySelector(\".sidebar\");\r\n    const sideBarBtn = document.querySelector(\".sidebar__header__hide-btn\");\r\n    const sideBarTitle = document.querySelector(\".sidebar__header__title\");\r\n    const sideBarImgBurger = document.querySelector(\r\n        \".sidebar__header__hide-btn__burger\"\r\n    );\r\n    const sideBarImgArrow = document.querySelector(\r\n        \".sidebar__header__hide-btn__arrow\"\r\n    );\r\n    const testListBlock = document.querySelector(\".sidebar__test-list\");\r\n\r\n    const descrTest = document.querySelector(\".contents__body__descr-test\");\r\n    const descr = document.querySelector(\".contents__descr\");\r\n    const cancelBtn = document.querySelector(\".contents__body__cancel-btn\");\r\n\r\n    const contentsHeader = document.querySelector(\".contents__header\");\r\n    const contentsHeaderTitle = document.querySelector(\r\n        \".contents__header__title\"\r\n    );\r\n    const contentsHeaderStartTest = document.querySelector(\r\n        \".contents__header__start-test\"\r\n    );\r\n\r\n    const startBtn = document.querySelector(\".contents__body__start-btn\");\r\n    const notice = document.querySelector(\".contents__notice\");\r\n\r\n    const contentTest = document.querySelector(\".contents__body__question-list\");\r\n    const footerButton = document.querySelector(\".contents__body__footer__btn\");\r\n\r\n    sideBarBtn.addEventListener(\"click\", (e) => {\r\n        testListBlock.classList.toggle(\"hidden\");\r\n        sideBarTitle.classList.toggle(\"hidden\");\r\n        sideBar.classList.toggle(\"width\");\r\n        sideBarImgBurger.classList.toggle(\"hidden\");\r\n        sideBarImgArrow.classList.toggle(\"hidden\");\r\n    });\r\n\r\n    for (let key in testData) {\r\n        const test = document.createElement(\"li\");\r\n        test.className = \"sidebar__test-list__item\";\r\n        test.innerHTML = `${testData[key].name}`;\r\n        testListBlock.append(test);\r\n    }\r\n\r\n    const testListItems = document.querySelectorAll(\".sidebar__test-list__item\");\r\n    let currentTest = \"\";\r\n\r\n    testListItems.forEach((item) => {\r\n        item.addEventListener(\"click\", (e) => {\r\n            testListItems.forEach((i) => i.classList.remove(\"active\"));\r\n            e.target.classList.add(\"active\");\r\n            currentTest = e.target.innerHTML;\r\n            contentsHeader.classList.remove(\"hidden\");\r\n            startBtn.classList.remove(\"hidden\");\r\n            cancelBtn.classList.remove(\"hidden\");\r\n            notice.classList.add(\"hidden\");\r\n            descrTest.classList.remove(\"hidden\");\r\n            descr.classList.remove(\"hidden\");\r\n\r\n            testData.forEach((test) => {\r\n                if (test.name == e.target.innerHTML) {\r\n                    descr.innerHTML = test.descr;\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    cancelBtn.addEventListener(\"click\", () => {\r\n        contentsHeader.classList.add(\"hidden\");\r\n        startBtn.classList.add(\"hidden\");\r\n        cancelBtn.classList.add(\"hidden\");\r\n        notice.classList.remove(\"hidden\");\r\n        descr.classList.add(\"hidden\");\r\n        testListItems.forEach((i) => i.classList.remove(\"active\"));\r\n    });\r\n\r\n    let currentQuestions = \"\";\r\n    let options = null\r\n    let labels = null\r\n    const nameTest = document.querySelector('.contents__header__start-test__title ')\r\n\r\n\r\n    function startTest() {\r\n        clearContent(contentTest)\r\n        \r\n        descrTest.classList.add(\"hidden\");\r\n        contentsHeaderTitle.classList.add(\"hidden\");\r\n        contentsHeaderStartTest.classList.remove(\"hidden\");\r\n        footerButton.classList.remove('hidden')\r\n        nameTest.innerHTML = currentTest\r\n        for (let key in testData) {\r\n            if (testData[key].name == currentTest)\r\n                currentQuestions = testData[key].questions;\r\n        }\r\n        let id = 0;\r\n        let numberAnwser = 0;\r\n        currentQuestions.forEach((question) => {\r\n            const testItemTitle = document.createElement(\"h3\");\r\n            testItemTitle.classList.add(\"contents__body__question-list__item__title\");\r\n            testItemTitle.innerHTML = question.question;\r\n            const testItem = document.createElement(\"li\");\r\n            const optionsBlock = document.createElement(\"div\");\r\n            optionsBlock.classList.add(\r\n                \"contents__body__question-list__item__options\"\r\n            );\r\n            testItem.classList.add(\"contents__body__question-list__item\");\r\n            contentTest.append(testItem);\r\n            testItem.append(testItemTitle);\r\n\r\n            question.answers.forEach((answer) => {\r\n                const label = document.createElement(\"label\");\r\n                label.classList.add(\r\n                    \"contents__body__question-list__item__options__label\"\r\n                );\r\n                label.setAttribute(\"for\", `answer${id}`);\r\n\r\n                const radio = document.createElement(\"input\");\r\n                radio.id = `answer${id}`;\r\n                radio.name = `answer${numberAnwser}`;\r\n                radio.type = \"radio\";\r\n                radio.classList.add(\r\n                    \"contents__body__question-list__item__options__input\"\r\n                );\r\n\r\n                label.innerHTML = answer;\r\n                radio.value = answer;\r\n                optionsBlock.append(radio);\r\n                optionsBlock.append(label);\r\n                id += 1;\r\n            });\r\n            testItem.append(optionsBlock);\r\n            numberAnwser += 1;\r\n        });\r\n        options = document.querySelectorAll(\".contents__body__question-list__item__options__input\");\r\n        labels = document.querySelectorAll(\".contents__body__question-list__item__options__label\");\r\n    }\r\n\r\n    startBtn.addEventListener(\"click\", startTest);\r\n\r\n\r\n    const completedTestBodyAnswersList = document.querySelector('.contents__body_completed-test__answers-list')\r\n\r\n    const completedTestBody = document.querySelector('.contents__body_completed-test')\r\n    const rightAnswers = document.querySelector('.contents__body_completed-test__right-answers')\r\n    const answersList = document.querySelector('.contents__body_completed-test__list')\r\n\r\n\r\n\r\n    footerButton.addEventListener(\"click\", (e) => {\r\n        if (footerButton.innerHTML == 'Завершить') {\r\n\r\n            contentsHeaderStartTest.classList.add(\"hidden\");\r\n            clearContent(contentTest)\r\n\r\n            completedTestBody.classList.remove('hidden')\r\n\r\n            let ourAnswers = []\r\n            options.forEach(option => {\r\n                if (option.checked) {\r\n                    ourAnswers.push(option.value)\r\n                }\r\n            })\r\n            let countRightAnswers = 0\r\n            for (let i = 0; i < currentQuestions.length; i++) {\r\n                if (ourAnswers[i] == currentQuestions[i].correct) {\r\n                    countRightAnswers++\r\n                }\r\n\r\n                const li = document.createElement('li')\r\n                const question = document.createElement('h3')\r\n                const ourAnswer = document.createElement('span')\r\n                const rightAnswer = document.createElement('span')\r\n\r\n                li.classList.add('contents__body_completed-test__list__item')\r\n                question.classList.add('contents__body_completed-test__list__item__question')\r\n                ourAnswer.classList.add('contents__body_completed-test__list__item__our-answer')\r\n                rightAnswer.classList.add('contents__body_completed-test__list__item__right')\r\n\r\n                question.innerHTML = currentQuestions[i].question\r\n                ourAnswer.innerHTML = `Вы ответили: ${ourAnswers[i] === undefined ? 'Не ответили' : ourAnswers[i]}`\r\n                rightAnswer.innerHTML = `Правильный ответ: ${currentQuestions[i].correct}`\r\n                \r\n                answersList.append(li)\r\n                li.append(question)\r\n                li.append(rightAnswer)\r\n                li.append(ourAnswer)\r\n                completedTestBodyAnswersList.append(answersList)\r\n\r\n\r\n            }\r\n            rightAnswers.innerHTML = `Вы ответили на ${countRightAnswers} из ${currentQuestions.length} вопросов.`\r\n            footerButton.innerHTML = 'Пройти ещё раз'\r\n        } else {\r\n            completedTestBody.classList.add('hidden')\r\n            footerButton.innerHTML = 'Завершить'\r\n            clearContent(answersList)\r\n            startTest()\r\n        }\r\n        \r\n\r\n    });\r\n\r\n\r\n\r\n    const resetButton = document.querySelector('.contents__header__start-test__btn-reset')\r\n\r\n    resetButton.addEventListener('click', () => {\r\n        options.forEach(option => {\r\n            option.checked = false\r\n        })\r\n    })\r\n\r\n});\r\n"],"names":["testData","name","descr","questions","question","answers","correct","clearContent","element","firstChild","removeChild","document","addEventListener","sideBar","querySelector","sideBarBtn","sideBarTitle","sideBarImgBurger","sideBarImgArrow","testListBlock","descrTest","cancelBtn","contentsHeader","contentsHeaderTitle","contentsHeaderStartTest","startBtn","notice","contentTest","footerButton","key","e","classList","toggle","test","createElement","className","innerHTML","append","testListItems","querySelectorAll","currentTest","forEach","item","i","remove","target","add","currentQuestions","options","nameTest","startTest","id","numberAnwser","testItemTitle","testItem","optionsBlock","answer","label","setAttribute","radio","type","value","completedTestBodyAnswersList","completedTestBody","rightAnswers","answersList","ourAnswers","option","checked","push","countRightAnswers","length","li","ourAnswer","rightAnswer","undefined"],"sourceRoot":""}